{"version":3,"sources":["components/Filter.js","components/PersonForm.js","services/phonebook.js","components/Person.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","handleParamChange","onChange","PersonForm","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","value","type","baseUrl","axios","get","then","res","data","newObj","post","id","newObject","put","delete","Person","person","setPersonsHandler","name","number","onClick","msg","window","confirm","phonebookService","Persons","persons","newSearchParam","filter","toLowerCase","includes","map","key","Notification","message","msgType","className","App","useState","setPersons","setNewName","setNewNumber","setNewSearchParam","setMsg","setMsgType","refreshAllPersons","people","useEffect","event","target","preventDefault","personObj","existingPerson","find","undefined","updatedPerson","catch","err","setTimeout","p","addedPerson","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5350c031.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ handleParamChange }) => {\n  return (\n    <div>\n      filter shown with: <input onChange={handleParamChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = ({\n  addPerson,\n  newName,\n  newNumber,\n  handleNameChange,\n  handleNumberChange,\n}) => {\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const req = axios.get(baseUrl);\n  return req.then((res) => res.data);\n};\n\nconst create = (newObj) => {\n  const req = axios.post(baseUrl, newObj);\n  return req.then((res) => res.data);\n};\n\nconst deleteRec = (id) => {\n  const req = axios.delete(`${baseUrl}/${id}`);\n  return req.then((res) => res.data);\n};\n\nconst update = (id, newObject) => {\n  const req = axios.put(`${baseUrl}/${id}`, newObject);\n  return req.then((res) => res.data);\n};\n\nexport default { getAll, create, update, deleteRec };\n","import React from \"react\";\nimport phonebookService from \"../services/phonebook\";\n\nconst Person = ({ person, setPersonsHandler }) => {\n  return (\n    <>\n      <li>\n        {person.name} {person.number}\n      </li>\n      <button\n        onClick={() => {\n          const msg = \"Delete \" + person.name + \"?\";\n          if (window.confirm(msg)) {\n            phonebookService.deleteRec(person.id).then(() => {\n              // uses 'hook' function from App.js to reload state\n              setPersonsHandler();\n            });\n          }\n        }}\n      >\n        Delete\n      </button>\n    </>\n  );\n};\n\nexport default Person;\n","import React from \"react\";\nimport Person from \"./Person\";\n\nconst Persons = ({ persons, newSearchParam, setPersonsHandler }) => {\n  return (\n    <ul>\n      {persons\n        .filter((person) =>\n          person.name.toLowerCase().includes(newSearchParam.toLowerCase())\n        )\n        .map((person) => (\n          <Person\n            person={person}\n            key={person.name}\n            setPersonsHandler={setPersonsHandler}\n          />\n        ))}\n    </ul>\n  );\n};\n\nexport default Persons;\n","import React from \"react\";\n\nconst Notification = ({ message, msgType }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className={msgType}>{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport Notification from \"./components/Notification\";\nimport phonebookService from \"./services/phonebook\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"Add a name...\");\n  const [newNumber, setNewNumber] = useState(\"Add a number...\");\n  const [newSearchParam, setNewSearchParam] = useState(\"\");\n  const [message, setMsg] = useState(null);\n  const [msgType, setMsgType] = useState(\"success\");\n\n  const refreshAllPersons = () => {\n    phonebookService.getAll().then((people) => {\n      setPersons(people);\n    });\n  };\n\n  useEffect(refreshAllPersons, []);\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleParamChange = (event) => {\n    setNewSearchParam(event.target.value);\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const personObj = {\n      name: newName,\n      number: newNumber !== \"Add a number...\" ? newNumber : \"\",\n    };\n\n    const existingPerson = persons.find(\n      (person) => person.name.toLowerCase() === newName.toLowerCase()\n    );\n\n    if (existingPerson !== undefined) {\n      const msg = `${existingPerson.name} is already added to the phonebook, replace the old number with a new one?`;\n      if (window.confirm(msg)) {\n        // overwrite the old number\n        phonebookService\n          .update(existingPerson.id, personObj)\n          .then((updatedPerson) => {\n            refreshAllPersons();\n          })\n          // person removed from server\n          .catch((err) => {\n            setMsgType(\"error\");\n            setTimeout(() => {\n              setMsg(null);\n            }, 5000);\n            setMsg(\n              `${existingPerson.name} has already been removed from the server`\n            );\n            // rm from state\n            setPersons(persons.filter((p) => p.id !== existingPerson.id));\n          });\n        setTimeout(() => {\n          setMsg(null);\n        }, 5000);\n        setMsgType(\"success\");\n        setMsg(`Updated ${existingPerson.name}`);\n      }\n    } else {\n      phonebookService.create(personObj).then((addedPerson) => {\n        setPersons(persons.concat(addedPerson));\n      });\n      setTimeout(() => {\n        setMsg(null);\n      }, 5000);\n      setMsgType(\"success\");\n      setMsg(`Added ${personObj.name}`);\n    }\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} msgType={msgType} />\n      <Filter handleParamChange={handleParamChange} />\n      <h3>Add a new</h3>\n      <PersonForm\n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n      <h3>Numbers</h3>\n      <Persons\n        persons={persons}\n        newSearchParam={newSearchParam}\n        setPersonsHandler={refreshAllPersons}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}